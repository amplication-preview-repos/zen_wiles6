/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested, IsEnum } from "class-validator";
import { CheckInCreateNestedManyWithoutMembersInput } from "./CheckInCreateNestedManyWithoutMembersInput";
import { Type } from "class-transformer";
import { MembershipTierWhereUniqueInput } from "../../membershipTier/base/MembershipTierWhereUniqueInput";
import { MenteeCreateNestedManyWithoutMembersInput } from "./MenteeCreateNestedManyWithoutMembersInput";
import { MentorCreateNestedManyWithoutMembersInput } from "./MentorCreateNestedManyWithoutMembersInput";
import { EnumMemberMentorshipStatus } from "./EnumMemberMentorshipStatus";
import { TicketCreateNestedManyWithoutMembersInput } from "./TicketCreateNestedManyWithoutMembersInput";

@InputType()
class MemberCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  address?: string | null;

  @ApiProperty({
    required: false,
    type: () => CheckInCreateNestedManyWithoutMembersInput,
  })
  @ValidateNested()
  @Type(() => CheckInCreateNestedManyWithoutMembersInput)
  @IsOptional()
  @Field(() => CheckInCreateNestedManyWithoutMembersInput, {
    nullable: true,
  })
  checkIns?: CheckInCreateNestedManyWithoutMembersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: () => MembershipTierWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => MembershipTierWhereUniqueInput)
  @IsOptional()
  @Field(() => MembershipTierWhereUniqueInput, {
    nullable: true,
  })
  membershipTier?: MembershipTierWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => MenteeCreateNestedManyWithoutMembersInput,
  })
  @ValidateNested()
  @Type(() => MenteeCreateNestedManyWithoutMembersInput)
  @IsOptional()
  @Field(() => MenteeCreateNestedManyWithoutMembersInput, {
    nullable: true,
  })
  mentees?: MenteeCreateNestedManyWithoutMembersInput;

  @ApiProperty({
    required: false,
    type: () => MentorCreateNestedManyWithoutMembersInput,
  })
  @ValidateNested()
  @Type(() => MentorCreateNestedManyWithoutMembersInput)
  @IsOptional()
  @Field(() => MentorCreateNestedManyWithoutMembersInput, {
    nullable: true,
  })
  mentors?: MentorCreateNestedManyWithoutMembersInput;

  @ApiProperty({
    required: false,
    enum: EnumMemberMentorshipStatus,
  })
  @IsEnum(EnumMemberMentorshipStatus)
  @IsOptional()
  @Field(() => EnumMemberMentorshipStatus, {
    nullable: true,
  })
  mentorshipStatus?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phone?: string | null;

  @ApiProperty({
    required: false,
    type: () => TicketCreateNestedManyWithoutMembersInput,
  })
  @ValidateNested()
  @Type(() => TicketCreateNestedManyWithoutMembersInput)
  @IsOptional()
  @Field(() => TicketCreateNestedManyWithoutMembersInput, {
    nullable: true,
  })
  tickets?: TicketCreateNestedManyWithoutMembersInput;
}

export { MemberCreateInput as MemberCreateInput };
