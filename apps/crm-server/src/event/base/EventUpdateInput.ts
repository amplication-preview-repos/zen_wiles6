/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CheckInUpdateManyWithoutEventsInput } from "./CheckInUpdateManyWithoutEventsInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  IsDate,
  IsNumber,
} from "class-validator";
import { Type } from "class-transformer";
import { TicketUpdateManyWithoutEventsInput } from "./TicketUpdateManyWithoutEventsInput";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";

@InputType()
class EventUpdateInput {
  @ApiProperty({
    required: false,
    type: () => CheckInUpdateManyWithoutEventsInput,
  })
  @ValidateNested()
  @Type(() => CheckInUpdateManyWithoutEventsInput)
  @IsOptional()
  @Field(() => CheckInUpdateManyWithoutEventsInput, {
    nullable: true,
  })
  checkIns?: CheckInUpdateManyWithoutEventsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  endTime?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  location?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  startTime?: Date | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  ticketPrice?: number | null;

  @ApiProperty({
    required: false,
    type: () => TicketUpdateManyWithoutEventsInput,
  })
  @ValidateNested()
  @Type(() => TicketUpdateManyWithoutEventsInput)
  @IsOptional()
  @Field(() => TicketUpdateManyWithoutEventsInput, {
    nullable: true,
  })
  tickets?: TicketUpdateManyWithoutEventsInput;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  tieredPrices?: InputJsonValue;
}

export { EventUpdateInput as EventUpdateInput };
